# -*- coding: utf-8 -*-
"""Apparel classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fJ-etRofcqOeuI_VE11HI_pftbpXhqWI
"""

!unzip photos1.zip -d data

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
# %matplotlib inline
from matplotlib import pyplot as plt
import cv2
import os

df=pd.read_csv("dataset.csv")

x=df.Image

y=df.Label

img=cv2.imread("data/photos/2.jpg",cv2.IMREAD_GRAYSCALE)
img.shape
# img= cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
# img= cv2.cvtColor(img,cv2.IMREAD_GRAYSCALE)
plt.imshow(img)
img.shape
IMG_SIZE=72
new_array=cv2.resize(img,(IMG_SIZE,IMG_SIZE))
plt.imshow(new_array)

x_train=[]
x_test=[]
# path=os.path.join("/content/data/photos")
# for img in os.listdir(path):
#   img_array=cv2.imread(os.path.join(path,img),cv2.IMREAD_GRAYSCALE)
#   new_array=cv2.resize((img_array),(72,72))
for i in range(int((len(x)))):
  t=x[i]
  img=cv2.imread("data/photos/{}.jpg".format(t))
  img= cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
  IMG_SIZE=72
  img = cv2.resize(img,(IMG_SIZE,IMG_SIZE))
  if i<=int((len(x)-1)*0.8):
    x_train.append([img,y[i]])
  
  else:
    x_test.append([img,y[i]])



len(x_train)
for sample in x_train[:10]:
  print(sample[1])

X=[]
Y=[]


X1=[]  #for test
Y1=[]  #for test
for features,label in x_train:
  X.append(features)
  Y.append(label)

for features,label in x_test:
  X1.append(features)
  Y1.append(label)

X1=np.array(X1).reshape(-1,IMG_SIZE,IMG_SIZE,1)





# plt.imshow(x_train[31])

y_train=[]
y_test=[]
for i in range(int((len(y)))):
  t=y[i]
  if i<=int((len(y)-1)*0.8):
    if(t=='Mask'):
      y_train.append(0)
   
    elif(t=='Without mask'):
      y_train.append(1)
    
    else:
      y_train.append(2)
  
  else:
     y_test.append(t)



X_train= np.array(X)     #converting the list to np array
# X_test= np.array(x_test)
X_train.shape
X_train=np.reshape(X_train,(-1,IMG_SIZE,IMG_SIZE,1))
X_train=np.array(X_train)
X_train.shape
X_train=X_train/255.0
X_train[1]

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Dropout,Activation,Flatten,Conv2D,MaxPooling2D



model=Sequential()
model.add(   Conv2D(64, (3,3), input_shape=X_train.shape[1:])  )
model.add(Activation("relu"))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Conv2D(64,(3,3)))
model.add(Activation("relu"))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())
model.add(Dense(64))

model.add(Dense(1))
model.add(Activation('sigmoid'))

model.compile(loss="binary_crossentropy",optimizer="adam",metrics=['accuracy'])

model.fit(X_train, y_train,batch_size=32,epochs=100,validation_split=0.1)

img_array = cv2.imread("test1.jpeg", cv2.IMREAD_GRAYSCALE)
new_array = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE))
new_array=np.reshape(new_array,(-1,IMG_SIZE,IMG_SIZE,1))
new_array=new_array/255.0
prediction=model.predict(new_array)

answer=None
if prediction[0][0]>0.6:
  answer=1
else:
  answer=0
#for output
if answer == 0:
  print("This image is with mask")

else:
   print("WITHOUT MASK")

